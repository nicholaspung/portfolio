{"version":3,"sources":["webpack:///./src/components/ProjectFeed/ProjectFeed.js","webpack:///./src/templates/index-template.js"],"names":["ProjectFeed","edges","className","styles","map","edge","key","node","fields","slug","dateTime","moment","frontmatter","date","format","title","description","dangerouslySetInnerHTML","__html","html","category","href","target","xmlns","width","height","viewBox","d","tags","query","IndexTemplate","data","pageContext","useSiteMetadata","siteTitle","siteSubtitle","subtitle","allMarkdownRemark","Layout","Sidebar","isIndex","Page"],"mappings":"2MA6CeA,EAnCK,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,yBAAKC,UAAWC,IAAO,iBACrB,wBAAID,UAAWC,IAAO,qBAAtB,YACCF,EAAMG,KAAI,SAACC,GAAD,OACT,yBAAKH,UAAWC,IAAO,sBAAuBG,IAAKD,EAAKE,KAAKC,OAAOC,MAClE,yBAAKP,UAAWC,IAAO,4BACrB,0BAAMD,UAAWC,IAAO,gCAAiCO,SAAUC,IAAON,EAAKE,KAAKK,YAAYC,MAAMC,OAAO,iBAC1GH,IAAON,EAAKE,KAAKK,YAAYC,MAAMC,OAAO,eAG/C,wBAAIZ,UAAWC,IAAO,6BACpB,yBAAKD,UAAWC,IAAO,kCAAmCE,EAAKE,KAAKK,YAAYG,QAElF,yBAAKb,UAAWC,IAAO,+BACrB,2BAAIE,EAAKE,KAAKK,YAAYI,aAC1B,yBAAKd,UAAWC,IAAO,mCAAoCc,wBAAyB,CAAEC,OAAQb,EAAKE,KAAKY,QACxG,yBAAKjB,UAAWC,IAAO,2CACrB,iDAAsB,0BAAMD,UAAWC,IAAO,wDAAyDE,EAAKE,KAAKK,YAAYQ,WAC7H,6BAEE,uBAAGlB,UAAWC,IAAO,iDAAkDkB,KAAI,GAAKhB,EAAKE,KAAKK,YAAYH,KAAQa,OAAO,UACnH,yBAAKC,MAAM,8BAA8BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAAY,0BAAMC,EAAE,+sBAC5F,gDAEF,uBAAGzB,UAAWC,IAAO,+CAAgDkB,KAAI,GAAKhB,EAAKE,KAAKK,YAAYgB,KAAQN,OAAO,UACjH,mE,YClChB,sCAcA,IAeaO,EAAK,aA2BHC,UA1CO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAA+B,KAAzBC,YACwBC,eAAtCC,EADuC,EAC9CnB,MAA4BoB,EADkB,EAC5BC,SAElBnC,EAAU8B,EAAKM,kBAAfpC,MAER,OACE,kBAACqC,EAAA,EAAD,CAAQvB,MAAOmB,EAAWlB,YAAamB,GACrC,kBAACI,EAAA,EAAD,CAASC,SAAO,IAChB,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAaxC,MAAOA","file":"component---src-templates-index-template-js-766d471eb1f7ff5fe5a6.js","sourcesContent":["// @flow\r\nimport React from 'react';\r\nimport moment from 'moment';\r\nimport type { Edges } from '../../types';\r\nimport styles from './ProjectFeed.module.scss';\r\n\r\ntype Props = {\r\n  edges: Edges\r\n};\r\n\r\nconst ProjectFeed = ({ edges }: Props) => (\r\n  <div className={styles['project-feed']}>\r\n    <h1 className={styles['project-feed__h1']}>Projects</h1>\r\n    {edges.map((edge) => (\r\n      <div className={styles['project-feed__item']} key={edge.node.fields.slug}>\r\n        <div className={styles['project-feed__item-meta']}>\r\n          <time className={styles['project-feed__item-meta-time']} dateTime={moment(edge.node.frontmatter.date).format('MMMM D, YYYY')}>\r\n            {moment(edge.node.frontmatter.date).format('MMMM YYYY')}\r\n          </time>\r\n        </div>\r\n        <h2 className={styles['project-feed__item-title']}>\r\n          <div className={styles['project-feed__item-title-link']}>{edge.node.frontmatter.title}</div>\r\n        </h2>\r\n        <div className={styles['project-feed__item-content']}>\r\n          <p>{edge.node.frontmatter.description}</p>\r\n          <div className={styles['project-feed__item-content-body']} dangerouslySetInnerHTML={{ __html: edge.node.html }}/>\r\n          <div className={styles['project-feed__item-content-description']}>\r\n            <p>Technologies Used: <span className={styles['project-feed__item-content-description-technologies']}>{edge.node.frontmatter.category}</span></p>\r\n            <div>\r\n              {/* GitHub SVG */}\r\n              <a className={styles['project-feed__item-content-description-github']} href={`${edge.node.frontmatter.slug}`} target=\"_blank\">\r\n                <svg xmlns=\"https://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\r\n                <span>GitHub Source</span>\r\n              </a>\r\n              <a className={styles['project-feed__item-content-description-link']} href={`${edge.node.frontmatter.tags}`} target=\"_blank\">\r\n                <span>Link to Project Website</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default ProjectFeed;\r\n","// @flow\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../components/Layout';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Page from '../components/Page';\r\nimport ProjectFeed from '../components/ProjectFeed/ProjectFeed';\r\nimport { useSiteMetadata } from '../hooks';\r\nimport type { PageContext, AllMarkdownRemark } from '../types';\r\n\r\ntype Props = {\r\n  data: AllMarkdownRemark,\r\n  pageContext: PageContext\r\n};\r\n\r\nconst IndexTemplate = ({ data, pageContext }: Props) => {\r\n  const { title: siteTitle, subtitle: siteSubtitle } = useSiteMetadata();\r\n\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <Layout title={siteTitle} description={siteSubtitle}>\r\n      <Sidebar isIndex />\r\n      <Page>\r\n        <ProjectFeed edges={edges} />\r\n      </Page>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query IndexTemplate {\r\n    allMarkdownRemark(\r\n        filter: { frontmatter: { template: { eq: \"project\" }, draft: { ne: true } } },\r\n        sort: { order: DESC, fields: [frontmatter___date] }\r\n      ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            categorySlug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n            category\r\n            description\r\n            slug\r\n            tags\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default IndexTemplate;\r\n"],"sourceRoot":""}