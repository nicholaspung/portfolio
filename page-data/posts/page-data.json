{"componentChunkName":"component---src-templates-posts-template-js","path":"/posts","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/dashboard-application-project-doc-revamp-1","categorySlug":"/category/personal-project/"},"frontmatter":{"title":"Project Doc for Dashboard Application | Part 1","date":"2019-09-27","category":"Personal Project","description":"The goal of this is to build an application with a monolithic architecture, mainly to reduce costs in hosting servers and buying domain names. If money weren't an issue, I would instead be going with a microservice architecture for the reason of having easier maintainable code to develop, being able to use different programming languages for different situations, and most importantly to enable continuous delivery and deployment of the application."}}},{"node":{"fields":{"slug":"/posts/contributing-to-open-source-1","categorySlug":"/category/open-source/"},"frontmatter":{"title":"First Time Contributing to Open Source | GatsbyJS","date":"2019-09-23","category":"Open Source","description":"I've contributed to my first open-source project: GatsbyJS!"}}},{"node":{"fields":{"slug":"/posts/struggling-with-google-oauth-2/","categorySlug":"/category/what-i-learned/"},"frontmatter":{"title":"Standalone Node API Server with Google OAuth | Part 2","date":"2019-09-09","category":"What I Learned","description":"After looking up documentation on how to best use Google OAuth, I've come to realize that majority of people writing online about Google OAuth use in applications that don't have a separate REST API. Therefore, they are able to use sessions in order to have users continue using the application while logged in. Or another solution would be to store the session data in the database, and having the client look up the database during the whole user interaction, which sounds less than ideal to me."}}},{"node":{"fields":{"slug":"/posts/struggling-with-google-oauth/","categorySlug":"/category/what-i-learned/"},"frontmatter":{"title":"Standalone Node API Server with Google OAuth | Part 1","date":"2019-08-20","category":"What I Learned","description":"For my personal project, I decided to develop a standalone Node API Server that would have Google OAuth for the login/register function. I had previously created a Node Server that was housed in the same repository as the React client with Google OAuth, so I didn't think that it would be that hard to separate the two. And boy was I wrong."}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/posts","nextPagePath":"//posts/page/1","hasPrevPage":false,"hasNextPage":false}}}